generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model products {
  id     String    @unique @default(uuid()) @db.Uuid
  name   String
  brand  String?   @default("")
  code   String?   @default("")
  kardex kardexs[]
}

model kardexs {
  id                String              @id @default(uuid()) @db.Uuid
  kardex_type       type_kardex
  product           products            @relation(fields: [product_id], references: [id], map: "fk_products", onDelete: Cascade, onUpdate: Cascade)
  //Calculada
  price             Decimal             @default(0) @db.Decimal(64, 32)
  //Calculada
  stock             Decimal             @default(0) @db.Decimal(64, 32)
  //Calculada
  total_price       Decimal             @default(0) @db.Decimal(64, 32)
  product_id        String              @unique @db.Uuid
  products_variants products_variants[]
  movements         movements[]
}

model products_variants {
  id            String  @id @default(uuid()) @db.Uuid
  kardex_id     String  @db.Uuid
  description   String  @db.VarChar(255)
  variant_stock Decimal @db.Decimal(12, 6)
  kardex        kardexs @relation(fields: [kardex_id], references: [id], map: "fk_kardex", onDelete: Cascade, onUpdate: Cascade)
}

// Tipo de movimiento , Entrada y Salida
// Unidad 
// Prencio
// Precio total

// Compra Ingreso
// Venta Salida Perdida,
// Devolucion de un cliente Incliente 
// Devolucion a proveedor salida
// Otra Salida

//Creacr procedimiento almacedo

model movements {
  id            String        @unique @default(uuid()) @db.Uuid
  type_movement type_movement
  units         Decimal       @default(0) @db.Decimal(64, 32)
  unit_price    Decimal       @default(0) @db.Decimal(64, 32)
  total_price   Decimal       @default(0) @db.Decimal(64, 32)
  description   String
  kardex_id     String        @unique @db.Uuid
  kardex        kardexs       @relation(fields: [kardex_id], references: [id])
}

enum type_movement {
  IN
  OUT
}

enum type_unit {
  meter
  liters
  grams
  unit
  time
}

enum type_kardex {
  pro
  pre
}
